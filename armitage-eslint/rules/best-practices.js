module.exports = {
  rules: {
    'accessor-pairs': ['error', { 'setWithoutGet': true, 'getWithoutSet': false }],
    'array-callback-return': ['error', { 'allowImplicit': true }],
    'block-scoped-var': 'error',
    'class-methods-use-this': 'off',
    'complexity': ['error', { 'max': 20 }],
    'consistent-return': 'off',
    'curly': ['error', 'multi-line'],
    'default-case': 'off',
    'dot-location': ['error', 'property'],
    'dot-notation': ['error', { 'allowKeywords': true }],
    'eqeqeq': ['error', 'always', { 'null': 'ignore' }],
    'guard-for-in': 'error',
    'max-classes-per-file': ['error', 1],
    'no-alert': 'error',
    'no-caller': 'error',
    'no-case-declarations': 'error',
    'no-div-regex': 'off',
    'no-else-return': ['error', { 'allowElseIf': true }],
    'no-empty-function': ['error', { 'allow': ['functions', 'arrowFunctions', 'methods'] }],
    'no-eq-null': 'error',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-extra-label': 'error',
    'no-fallthrough': 'error',
    'no-floating-decimal': 'error',
    'no-global-assign': ['error', { 'exceptions': [] }],
    'no-implicit-coercion': ['error', { 'number': true, 'string': true, 'boolean': false, 'allow': [] }],
    'no-implicit-globals': 'error',
    'no-implied-eval': 'error',
    'no-invalid-this': 'error',
    'no-iterator': 'error',
    'no-labels': ['error', { 'allowLoop': false, 'allowSwitch': false }],
    'no-lone-blocks': 'error',
    'no-loop-func': 'error',
    'no-magic-numbers': ['off', {
      'ignore': [],
      'ignoreArrayIndexes': true,
      'enforceConst': true,
      'detectObjects': false
    }],
    'no-multi-spaces': ['error', { 'ignoreEOLComments': false }],
    'no-multi-str': 'error',
    'no-new': 'error',
    'no-new-func': 'error',
    'no-new-wrappers': 'error',
    'no-octal': 'error',
    'no-octal-escape': 'error',
    'no-param-reassign': ['error', {
      'props': true,
      'ignorePropertyModificationsFor': ['acc', 'accumulator']
    }],
    'no-proto': 'error',
    'no-redeclare': 'error',
    'no-restricted-properties': ['error',
      { 'object': 'arguments', 'property': 'callee', 'message': 'arguments.callee is deprecated' },
      { 'object': 'global', 'property': 'isFinite', 'message': 'Please use Number.isFinite instead' },
      { 'object': 'self', 'property': 'isFinite', 'message': 'Please use Number.isFinite instead' },
      { 'object': 'window', 'property': 'isFinite', 'message': 'Please use Number.isFinite instead' },
      { 'object': 'global', 'property': 'isNaN', 'message': 'Please use Number.isNaN instead' },
      { 'object': 'self', 'property': 'isNaN', 'message': 'Please use Number.isNaN instead' },
      { 'object': 'window', 'property': 'isNaN', 'message': 'Please use Number.isNaN instead' },
      { 'property': '__defineGetter__', 'message': 'Please use Object.defineProperty instead.' },
      { 'property': '__defineSetter__', 'message': 'Please use Object.defineProperty instead.' },
      { 'object': 'Math', 'property': 'pow', 'message': 'Use the exponentiation operator (**) instead.' }
    ],
    'no-return-assign': ['error', 'always'],
    'no-return-await': 'error',
    'no-script-url': 'error',
    'no-self-assign': ['error', { 'props': false}],
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-throw-literal': 'error',
    'no-unmodified-loop-condition': 'off',
    'no-unused-expressions': ['error', {
      'allowShortCircuit': false,
      'allowTernary': false,
      'allowTaggedTemplates': false
    }],
    'no-unused-labels': 'error',
    'no-useless-call': 'error',
    'no-useless-catch': 'error',
    'no-useless-concat': 'error',
    'no-useless-escape': 'error',
    'no-useless-return': 'error',
    'no-void': 'error',
    'no-warning-comments': ['off', { 'terms': ['todo', 'fixme', 'xxx'], 'location': 'start' }],
    'no-with': 'error',
    'prefer-named-capture-group': 'off',
    'prefer-promise-reject-errors': ['error', { 'allowEmptyReject': true }],
    'radix': ['error', 'always'],
    'require-await': 'off',
    'require-unicode-regexp': 'off',
    'vars-on-top': 'error',
    'wrap-iife': ['error', 'outside', { 'functionPrototypeMethods': false }],
    'yoda': ['error', 'never', { 'exceptRange': false, 'onlyEquality': false }]
  }
}
